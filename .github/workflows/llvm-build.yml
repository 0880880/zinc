name: LLVM Build

on:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-24.04, ubuntu-24.04-arm, macos-15, macos-13, windows-2022]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Install Dependencies
        shell: bash
        run: |
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            sudo apt update
            sudo apt install -y clang ninja-build
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            brew install ninja llvm
            echo "/opt/homebrew/opt/llvm/bin" >> $GITHUB_PATH
          elif [[ "$RUNNER_OS" == "Windows" ]]; then
            choco install llvm ninja
          fi

      - name: Checkout & Clone LLVM monorepo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # needed for full history if you later tag or checkout specific versions
      - name: Clone LLVM/Clang
        shell: bash
        run: |
          git clone --depth=1 --branch=main https://github.com/llvm/llvm-project.git

      - name: Configure & Build (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          cd llvm-project
          mkdir build
          mkdir install
          cd build
          cmake -G "Visual Studio 17 2022" ../llvm `
            -DCMAKE_BUILD_TYPE=Release `
            -DLLVM_ENABLE_PROJECTS="clang" `
            -DLLVM_TARGETS_TO_BUILD="host" `
            -DCMAKE_INSTALL_PREFIX=../install `
            -DBUILD_SHARED_LIBS=ON `
            -DLLVM_ENABLE_RTTI=ON `
            -DLLVM_ENABLE_EH=ON
          cmake --build . --config Release --target install


      - name: Configure & Build
        if: runner.os != 'Windows'
        shell: bash
        run: |
          cd llvm-project
          mkdir build install
          cd build
          LINKER_FLAGS=""
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            LINKER_FLAGS="-DCMAKE_LINKER=/usr/bin/ld.gold"
          fi
          cmake -G Ninja ../llvm \
            -DCMAKE_BUILD_TYPE=Release \
            -DLLVM_ENABLE_PROJECTS="clang" \
            -DLLVM_TARGETS_TO_BUILD="host" \
            -DCMAKE_INSTALL_PREFIX=../install \
            -DBUILD_SHARED_LIBS=ON \
            $LINKER_FLAGS
          ninja
          ninja install

      - name: Upload shared‚Äêlibrary artifacts
        uses: actions/upload-artifact@v4
        with:
          name: llvm-${{ matrix.os }}-${{ matrix.arch }}
          path: ./llvm-project/build

